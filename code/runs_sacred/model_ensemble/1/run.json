{
  "artifacts": [],
  "command": "main_program",
  "experiment": {
    "base_dir": "D:\\User\\William\\Documents\\Devoir\\Projet Deep\\Projet_GLO7030\\code",
    "dependencies": [
      "numpy==1.15.0",
      "sacred==0.7.4",
      "torch==1.0.1"
    ],
    "mainfile": "main_ensemble.py",
    "name": "Doodle_Boys",
    "repositories": [],
    "sources": [
      [
        "data_set_file.py",
        "_sources\\data_set_file_9725c710a6c86167d5bb12fbf29e7964.py"
      ],
      [
        "main_ensemble.py",
        "_sources\\main_ensemble_645326352d0da4ea5891c323c272c917.py"
      ],
      [
        "model_creation.py",
        "_sources\\model_creation_1419f994616bddf2634b3bf75a3ce354.py"
      ],
      [
        "test_metrics.py",
        "_sources\\test_metrics_51a9d4cc92100056f815d05bf365b4f9.py"
      ],
      [
        "trainning.py",
        "_sources\\trainning_0fad5600f757084f3aaa004c67ec3f20.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 46, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"D:/User/William/Documents/Devoir/Projet Deep/Projet_GLO7030/code/main_ensemble.py\", line 138, in main_program\n    val_acc_class_save_name=val_acc_class_save_name)\n",
    "  File \"D:\\User\\William\\Documents\\Devoir\\Projet Deep\\Projet_GLO7030\\code\\trainning.py\", line 121, in train_model\n    output = model(inputs)\n",
    "  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 489, in __call__\n    result = self.forward(*input, **kwargs)\n",
    "  File \"D:\\User\\William\\Documents\\Devoir\\Projet Deep\\Projet_GLO7030\\code\\model_creation.py\", line 43, in forward\n    output=model(x)\n",
    "  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 489, in __call__\n    result = self.forward(*input, **kwargs)\n",
    "  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torchvision\\models\\resnet.py\", line 150, in forward\n    x = self.conv1(x)\n",
    "  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\module.py\", line 489, in __call__\n    result = self.forward(*input, **kwargs)\n",
    "  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\torch\\nn\\modules\\conv.py\", line 320, in forward\n    self.padding, self.dilation, self.groups)\n",
    "RuntimeError: Input type (torch.cuda.FloatTensor) and weight type (torch.FloatTensor) should be the same\n"
  ],
  "heartbeat": "2019-04-17T21:02:23.307012",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-8700 CPU @ 3.20GHz",
    "hostname": "DESKTOP-04C6VBJ",
    "os": [
      "Windows",
      "Windows-10-10.0.17763-SP0"
    ],
    "python_version": "3.7.1"
  },
  "meta": {
    "command": "main_program",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2019-04-17T21:02:20.770136",
  "status": "FAILED",
  "stop_time": "2019-04-17T21:02:23.311000"
}